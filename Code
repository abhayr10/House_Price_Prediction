import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler, PolynomialFeatures
from sklearn.linear_model import LinearRegression, Ridge
from sklearn.model_selection import train_test_split

default = pd.read_csv('C:\Program Files\kc_house_data.csv')  # Load the data
default.drop('id', axis=1, inplace=True)

# Perform exploratory data analysis (EDA)

sns.boxplot(x='waterfront', y='price', data=default)
sns.regplot(x='sqft_above', y='price', data=default)

# Compute correlation matrix

corr = default.corr()

# Visualize correlation matrix

plt.figure(figsize=(12, 10))
sns.heatmap(corr, annot=True, cmap='viridis_r')

# Select features and target variable

features = ['floors', 'waterfront', 'lat', 'bedrooms', 'sqft_basement', 'view', 'bathrooms', 'sqft_living15', 'sqft_above', 'grade', 'sqft_living']
X = default[features]
Y = default['price']

# Split the data into training and testing sets

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.15, random_state=1)

# Build a pipeline for modeling

pipeline = Pipeline([
    ('scale', StandardScaler()),
    ('polynomial', PolynomialFeatures(degree=2, include_bias=False)),
    ('model', Ridge(alpha=0.1))
])

# Train the model using the pipeline

pipeline.fit(x_train, y_train)

# Evaluate the model on the test set

score = pipeline.score(x_test, y_test)
print(f"Coefficient of Determination: {score}")
